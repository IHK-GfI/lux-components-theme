@use "sass:list";
@use "sass:map";
@use "sass:string";
@use "luxcommon";
@use "luxpalette";
@use "../public/global";

$sizes: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400, A700;
$paletten: luxpalette.$lux-palette_primary, luxpalette.$lux-palette_accent, luxpalette.$lux-palette_warn;
$paletteNamen: primary, accent, warn;

:root {
  @for $i from 1 through 3 {
    @each $size in $sizes {
      --lux-theme-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)}: #{map.get(list.nth($paletten, $i), $size)};
      --lux-theme-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)}-contrast: #{map.get(
          list.nth($paletten, $i),
          contrast,
          $size
        )};
    }
  }

  // Allgemein
  --lux-theme-dark-primary-text: #{luxcommon.$dark-primary-text};
  --lux-theme-dark-secondary-text: #{luxcommon.$dark-secondary-text};
  --lux-theme-dark-disabled-text: #{luxcommon.$dark-disabled-text};
  --lux-theme-dark-dividers: #{luxcommon.$dark-dividers};
  --lux-theme-dark-focused: #{luxcommon.$dark-focused};

  --lux-theme-light-primary-text: #{luxcommon.$light-primary-text};
  --lux-theme-light-secondary-text: #{luxcommon.$light-secondary-text};
  --lux-theme-light-disabled-text: #{luxcommon.$light-disabled-text};
  --lux-theme-light-dividers: #{luxcommon.$light-dividers};
  --lux-theme-light-focused: #{luxcommon.$light-focused};

  // App
  --lux-theme-app-header-bg: #{luxcommon.$app-header-bg};
  --lux-theme-app-content-bg: #{luxcommon.$app-content-bg};
  --lux-theme-app-footer-bg: #{luxcommon.$app-footer-bg};
  --lux-theme-app-data-bg: #{luxcommon.$app-data-bg};
  --lux-theme-app-gradient: #{luxcommon.$app-gradient};
  --lux-theme-app-gradient-reverse: #{luxcommon.$app-gradient-reverse};
  --lux-theme-app-border-color: #{app-border-color};

  // Form
  --lux-theme-form-border-color: #{luxcommon.$form-border-color};
  --lux-theme-form-control-font-size: #{luxcommon.$form-control-font-size};
  --lux-theme-form-control-font-size-small: #{luxcommon.$form-control-font-size-small};
  --lux-theme-form-control-buffer: #{luxcommon.$form-control-buffer};

  // Button
  --lux-theme-button-font-size: #{luxcommon.$button-font-size};
  --lux-theme-button-height: #{luxcommon.$button-height};
  --lux-theme-button-fav-height: #{luxcommon.$button-fav-height};

  // Fokus
  --lux-theme-outline-width: #{luxcommon.$outline-width};
  --lux-theme-outline-style: #{luxcommon.$outline-style};
  --lux-theme-outline-color-bright: #{luxcommon.$outline-color-bright};
  --lux-theme-outline-color-dark: #{luxcommon.$outline-color-dark};

  // Hover
  --lux-theme-hover-color: #{luxcommon.$lux-hover-color};
  --lux-theme-hover-color-for-dark-background: #{luxcommon.$lux-hover-color-for-dark-background};

  // Selektion
  --lux-theme-selected-border-color: #{luxcommon.$lux-selected-border-color};
  --lux-theme-selected-bg-color: #{luxcommon.$lux-selected-bg-color};

  // Hauptfarben
  --lux-theme-primary-color: #{map.get(luxpalette.$lux-palette_primary, 500)};
  --lux-theme-accent-color: #{map.get(luxpalette.$lux-palette_accent, 500)};
  --lux-theme-warn-color: #{map.get(luxpalette.$lux-palette_warn, 500)};

  // Hintergrundfarben (z.B. Badge oder Progress)
  @each $colorName, $colorNameHex in luxcommon.$componentBgColors {
    --lux-theme-component-bg-#{''+$colorName+''}: #{$colorNameHex};
  }

  @each $colorName, $colorNameHex in luxcommon.$colorsForDarkBg {
    --lux-theme-component-bg-dark-#{''+$colorName+''}: #{$colorNameHex};
  }

  @each $colorName, $colorNameHex in luxcommon.$componentFontColors {
    --lux-theme-component-font-color-#{''+$colorName+''}: #{$colorNameHex};
  }
}

html,
body,
.lux-app-container {
  height: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: luxcommon.$app-headline-font, global.$app-font-family;
}

h1 {
  font-size: 24px;
  font-weight: 600;
  margin-block-start: 1.2em;
  margin-block-end: 14px;
}

h2 {
  font-size: 24px;
  font-weight: 500;
  margin-block-start: 1.2em;
  margin-block-end: 14px;
}

h3 {
  font-size: 20px;
  font-weight: 500;
  margin-block-start: 1.2em;
  margin-block-end: 14px;
}

h4 {
  font-size: 16px;
  font-weight: 600;
  margin-block-start: 1.2em;
  margin-block-end: 14px;
}

h5 {
  font-size: 14px;
  font-weight: 700;
  margin-block-start: 2em;
  margin-block-end: 14px;
}

h6 {
  font-size: 12px;
  font-weight: 700;
  margin-block-start: 2em;
  margin-block-end: 14px;
}

.lux-app-header-bg {
  background-color: luxcommon.$app-header-bg;
}

.lux-app-content-bg {
  background-color: luxcommon.$app-content-bg;
}

.lux-app-footer-bg {
  background-color: luxcommon.$app-footer-bg;
}

.lux-app-data-bg {
  background-color: luxcommon.$app-data-bg;
}

.lux-selected-bg {
  background-color: luxcommon.$lux-selected-bg-color;
}

.lux-hover-bg {
  background-color: luxcommon.$lux-hover-color;
}

.lux-hover-dark-bg {
  background-color: luxcommon.$lux-hover-color-for-dark-background;
}

.lux-gradient-bg {
  background-color: #fff; //Fallback
  background-image: luxcommon.$app-gradient;
}

.lux-color-dark-divider {
  color: luxcommon.$dark-dividers;
}

.lux-color-light-divider {
  color: luxcommon.$light-dividers;
}

.lux-outline-color-light {
  color: luxcommon.$outline-color-bright;
}

.lux-outline-color-dark {
  color: luxcommon.$outline-color-dark;
}

.lux-outline-width {
  outline-width: luxcommon.$outline-width;
}

.lux-outline-style {
  outline-style: luxcommon.$outline-style;
}

.lux-outline-light {
  color: luxcommon.$outline-color-bright;
  outline-width: luxcommon.$outline-width;
  outline-style: luxcommon.$outline-style;
}

.lux-outline-dark {
  color: luxcommon.$outline-color-dark;
  outline-width: luxcommon.$outline-width;
  outline-style: luxcommon.$outline-style;
}

.lux-highlight-section {
  -webkit-border-radius: 4px;
  -moz-border-radius: 4px;
  border-radius: 4px;
  margin: 16px 0;
  padding: 16px 16px;
  border: 1px solid luxcommon.$dark-dividers;
  display: flex;
  word-break: break-word;

  &.column {
    flex-direction: column;
    gap: 16px;
  }
  &.row {
    flex-direction: row;
    gap: 16px;
  }
}

.lux-highlight-section-label {
  margin-top: 0;
  margin-left: 0;
}

.lux-simple-form {
  margin: 4px 0;
  display: flex;
  &.column {
    flex-direction: column;
    gap: 16px;
  }
  &.row {
    flex-direction: row;
    gap: 16px;
  }
}

.lux-app-container {
  flex-direction: column;
  box-sizing: border-box;
  display: flex;
  flex: 1 1 100%;
}

body {
  -webkit-overflow-scrolling: touch;
}

div {
  font-family: global.$app-font-family;
}

.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {
  &.lux-file-preview-backdrop {
    background: #000;
    opacity: 0.8 !important;
  }
}

.mat-dialog-container {
  background-color: luxcommon.$app-content-bg !important;
}

lux-card.lux-card-grow {
  display: flex;
  flex: 1 1 auto;
  width: 400px;
  min-width: 0;

  mat-card {
    display: flex;
    flex: 1 1 auto;
    min-width: 0;
  }

  mat-card-content {
    display: flex;
    flex: 1 1 auto;
    min-width: 0;
  }
}

.lux-crop {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.lux-label {
  color: luxcommon.$dark-secondary-text;
  font-size: 75%;
}

.lux-hint {
  color: luxcommon.$dark-secondary-text;
  font-size: 12px;
}

.lux-sr-only {
  // sr=screen-reader vgl. https://webaim.org/techniques/css/invisiblecontent/
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.lux-nowrap {
  white-space: nowrap;
}

.lux-cursor {
  cursor: pointer;
}

.lux-block-pointer-events {
  pointer-events: none;
}

.lux-vertical-align-baseline {
  vertical-align: baseline !important;
}

.lux-black-semi-transparent {
  color: luxcommon.$dark-primary-text;
}

.lux-semi-transparent {
  opacity: 0.6;
}

.lux-overflow-y-hidden {
  overflow-y: hidden;
}

.lux-overflow-y-auto {
  overflow-y: auto;
}

.lux-overflow-wrap-break-word {
  overflow-wrap: break-word;
}

.lux-bold {
  font-weight: bold !important;
}

.lux-uppercase {
  text-transform: uppercase !important;
}

.lux-lowercase {
  text-transform: lowercase !important;
}

.lux-hyphenate {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: normal;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
  overflow-x: auto;
}

/* <MARGINS / PADDINGS> */

.lux-p-footer {
  padding: 8px;
}

.lux-p-header {
  padding: 8px;
}

.lux-snackbar {
  position: relative;
  margin: 0 !important;
  min-width: unset !important;
  // Die Snackbar wird durch die App umpositioniert, bevor sie sichtbar geschaltet wird.
  // Würde man die Snackbar nicht verstecken, würde sie von der initialen Position zur neuen
  // springen.
  visibility: hidden;
}

.mat-snack-bar-handset .lux-snackbar {
  left: 8px;
  width: auto !important;
}

/*
  Erstellt die Layout-Gaps (Margin-Abstände für Children von fxLayouts).
  Um weitere Steps hinzufuegen die Variable gapSteps um die entsprechenden Werte ergaenzen.
 */
$gapSteps: 10, 20, 30;

@each $gapStep in $gapSteps {
  .lux-flex-layout-gap-#{$gapStep}[style*="row"] > *:not(:last-child) {
    margin-right: #{$gapStep}px;
  }
  .lux-flex-layout-gap-#{$gapStep}[style*="column"] > *:not(:last-child) {
    margin-bottom: #{$gapStep}px;
  }
}

/*
  Erstellt die Z-Indizes.
  Um weitere Z-Indizes anzulegen, die Variable zindexSteps um die entsprechenden Werte ergaenzen.
 */
$zindexSteps: 100, 500, 1000;

@each $zindexStep in $zindexSteps {
  .lux-z-index-#{$zindexStep} {
    z-index: #{$zindexStep};
  }
}

/*
  Für die Darstellung von uppercase-Labels wenn die Configuration das erlaubt.
 */
.lux-uppercase > lux-button,
lux-button.lux-uppercase {
  .lux-button-label {
    text-transform: uppercase;
  }
}

@each $colorName, $colorNameHex in luxcommon.$componentBgColors {
  .lux-color-#{"" + $colorName + ""} {
    color: $colorNameHex;
  }
}

@each $colorName, $colorNameHex in luxcommon.$componentBgColors {
  .lux-bg-color-#{"" + $colorName + ""} {
    background: $colorNameHex;
  }
}

@each $colorName, $colorNameHex in luxcommon.$componentFontColors {
  .lux-font-color-#{"" + $colorName + ""} {
    color: $colorNameHex;
  }
}

.lux-color-dark-primary-text {
  color: luxcommon.$dark-primary-text;
}

.lux-color-dark-secondary-text {
  color: luxcommon.$dark-secondary-text;
}

.lux-color-dark-disabled-text {
  color: luxcommon.$dark-disabled-text;
}

.lux-color-dark-focused {
  color: luxcommon.$dark-focused;
}

.lux-color-light-primary-text {
  color: luxcommon.$light-primary-text;
}

.lux-color-light-secondary-text {
  color: luxcommon.$light-secondary-text;
}

.lux-color-light-disabled-text {
  color: luxcommon.$light-disabled-text;
}

.lux-color-light-focused {
  color: luxcommon.$light-focused;
}

@each $size in $sizes {
  @for $i from 1 through 3 {
    .lux-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)} {
      color: map.get(list.nth($paletten, $i), $size);
    }

    .lux-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)}-contrast {
      color: map.get(list.nth($paletten, $i), contrast, $size);
    }

    .lux-bg-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)} {
      background-color: map.get(list.nth($paletten, $i), $size);
    }

    .lux-bg-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)}-contrast {
      background-color: map.get(list.nth($paletten, $i), contrast, $size);
    }

    .lux-border-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)} {
      border-color: map.get(list.nth($paletten, $i), $size);
    }

    .lux-border-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)}-contrast {
      border-color: map.get(list.nth($paletten, $i), contrast, $size);
    }

    .lux-outline-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)} {
      outline-color: map.get(list.nth($paletten, $i), $size);
    }

    .lux-outline-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)}-contrast {
      outline-color: map.get(list.nth($paletten, $i), contrast, $size);
    }

    .lux-text-decoration-#{list.nth($paletteNamen, $i)}-color-#{string.to-lower-case("" + $size)} {
      text-decoration-color: map.get(list.nth($paletten, $i), $size);
    }

    .lux-text-decoration-#{list.nth($paletteNamen, $i)}-color-#{string.to-lower-case("" + $size)}-contrast {
      text-decoration-color: map.get(list.nth($paletten, $i), contrast, $size);
    }

    .lux-column-rule-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)} {
      column-rule-color: map.get(list.nth($paletten, $i), $size);
    }

    .lux-column-rule-color-#{list.nth($paletteNamen, $i)}-#{string.to-lower-case("" + $size)}-contrast {
      column-rule-color: map.get(list.nth($paletten, $i), contrast, $size);
    }
  }
}

.lux-badge-notification {
  &.mat-badge-large {
    .mat-badge-content {
      font-size: 15px;
    }
  }

  &.mat-badge .mat-badge-content {
    border: 2px solid white;
  }

  &.mat-badge.lux-badge-no-border .mat-badge-content {
    border: 2px solid transparent;
  }

  &.mat-badge:not(.mat-badge-disabled).mat-badge-accent .mat-badge-content {
    background-color: map.get(luxcommon.$componentBgColors, "green");
  }

  &.lux-badge-color-default {
    &.mat-badge:not(.mat-badge-disabled) .mat-badge-content {
      color: white;
      background: map.get(luxcommon.$componentBgColors, "gray");
    }
  }
}
