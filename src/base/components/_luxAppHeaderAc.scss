@use "sass:color";
@use "sass:map";
@use "../luxfocus";
@use "../luxcommon";
@use "../luxpalette";
@use "../../public/global";
@use "../luxelevations";


lux-app-header-ac {
  display: block;

  .lux-image {
    cursor: pointer;
    padding: 4px;
    &:focus-visible {
      @include luxfocus.focus-dark-mixin;
      border-radius: 4px;
    }
  }

  lux-button {
    button.lux-button.lux-button-rounded {
      min-width: 36px; //Weil der Menu-Trigger hier ein andere Min-width setzt- könnte vielleich geändert werden?
      width: 36px;
      padding-left: 0px !important;
      padding-right: 0px !important;
      background-color: transparent;
      @include luxelevations.lux-elevation-z0;
      
      lux-icon {
        color: luxpalette.$lux-primary-color;
      }

      &:hover:not([disabled]).mat-fab:hover.mat-primary {
        lux-icon { 
          color: #ffffff !important; 
        }
      }
      &:focus-visible:not([disabled]).mat-fab.mat-primary.cdk-focused.cdk-keyboard-focused {
        background-color: transparent !important;
        lux-icon {
          color: map.get(luxpalette.$lux-palette_primary, 700) !important;
        }
        @include luxfocus.focus-dark-mixin;
      }  
    }

    &.menu-opened {
      button.lux-button.lux-button-rounded {
        background-color: map.get(luxpalette.$lux-palette_primary, 300);
        lux-icon {
          color: #ffffff !important;
        }
      }
    }

    &.lux-menu-trigger-default {
      button.mat-button.lux-button {
        &:hover {
          background-color: map.get(luxpalette.$lux-palette-primary, 300) !important;
          color: #ffffff !important;
        }
        &:focus-visible:not(:hover) {
          color: map.get(luxpalette.$lux-palette-primary, 700)!important;
          background-color: transparent !important;
        }
        &:active {
          color: map.get(luxpalette.$lux-palette-primary, 700)!important;
        }
      }
    }
  }
  
  .lux-app-header-top-bar {
    padding: 4px 24px;
    min-height: 52px;
    font-size: 1rem;
    color: luxcommon.$dark-primary-text;
    background-color: #fff;

    &.lux-mobile {
      padding: 4px;
    }
    
    lux-menu {
      width: unset;
      .lux-menu-extended {
        overflow: unset;
      }
    }
  }

  .lux-app-header-nav-bar {
    background-color: map.get(luxpalette.$lux-palette-primary, 50);
    padding: 4px 24px;
    min-height: 30px;
    overflow: hidden;
    white-space: nowrap;

    &.lux-mobile {
      padding: 4px;
    }

    .lux-app-title {
      color:luxcommon.$dark-primary-text;
      padding: 4px;
      font-size: 20px;
      font-weight: 700;
      font-family: luxcommon.$app-headline-font, luxcommon.$app-font-family;

      &.lux-mobile {
        font-size: 16px;
        font-weight: 500;
      }
    }

    .lux-header-ac-nav-menu {
      lux-button.lux-menu-item {
        button.lux-button .lux-button-label {
          font-size: 16px !important;
          letter-spacing: 0px;
        }

        &.nav-item-selected  button.lux-button .lux-button-label {
          font-weight: 600;
        }
      }

      .lux-menu-extended {
        padding: 0;
      }
    }
  }
}
.cdk-overlay-pane {
  button.lux-menu-item {
    margin: 0px;

    &.lux-selected-item-ac {
      font-weight: 600;
      & .lux-button-label::after {
        content: '';
        position: absolute;
        width: 20px;
        height: 20px;
        right: 0;
        top: 14px;
        margin: 0 10px 0 4px;
        background-color: luxpalette.$lux-primary-color;
        -webkit-mask: url('/assets/icons/Interface-Essentials/Validation/interface-validation-check--check-form-validation-checkmark-success-add-addition.svg');
        -webkit-mask-repeat: no-repeat;
        -webkit-mask-position: center;
        -webkit-mask-size: cover;
        mask: url('/assets/icons/Interface-Essentials/Validation/interface-validation-check--check-form-validation-checkmark-success-add-addition.svg');
        mask-repeat: no-repeat;
        mask-position: center;
        mask-size: cover;
      }
    }

    &:not([disabled=true]):hover {
      background-color: map-get(luxpalette.$lux-palette_primary, 300) !important;
      color: #ffffff;
      .mat-icon-no-color {
        color: #ffffff;
      }
      &::after {
        background-color: #ffffff;
      }
    }
    
    &:not([disabled=true]):focus-visible {
      background-color: map-get(luxpalette.$lux-palette_primary, 300);
      color: #ffffff;
      .mat-icon-no-color {
        color: #ffffff;
      }
      @include luxfocus.focus-dark-mixin-inline;
      &::after {
        width: 16px;
        background-color: #ffffff;
      }
    }
  }
  
}
