@use "../luxcommon";

$arrowSize: 16px;

lux-tour-hint {
  .tour-hint {
    --baseOffsetX: 0px;
    --baseOffsetY: 0px;
    --arrowOffsetX: 0px;
    --arrowOffsetY: 0px;

    position: fixed;
    z-index: 1002;
    border-radius: luxcommon.$app-border-radius;
    transform: translate(var(--baseOffsetX), var(--baseOffsetY));
    padding: 10px;
    min-width: 250px;
    min-height: 100px;

    display: flex;

    box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);
    background: #fff;

    &:focus {
      outline: none;
    }

    .arrow {
      position: absolute;
      width: 0;

      //The "Arrow" image
      border-top: $arrowSize solid white;
      border-left: $arrowSize solid transparent;
      border-right: $arrowSize solid transparent;

      //Resets the transformations on the arrow ... otherwise they would stack
      -webkit-transform: translate(0px); /* Safari and Chrome */
      -moz-transform: translate(0px); /* Firefox */
      -ms-transform: translate(0px); /* IE 9 */
      -o-transform: translate(0px); /* Opera */
      transform: translate(0px);

      //Arrow if pointing UP
      &.top {
        top: -$arrowSize;
        left: $arrowSize;
        transform: rotate(180deg) translateX(var(--arrowOffsetX));
      }

      //Arrow if pointing DOWN
      &.bottom {
        top: 100%;
        left: $arrowSize;
        transform: rotate(0deg) translateX(calc(var(--arrowOffsetX) * -1));
      }

      //Arrow if pointing LEFT
      &.left {
        top: $arrowSize * 1.5;
        left: -($arrowSize * 1.5 - 1px);
        transform: rotate(90deg) translateX(calc(var(--arrowOffsetY) * -1));
      }

      //Arrow if pointing RIGHT
      &.right {
        top: $arrowSize * 1.5;
        right: -($arrowSize * 1.5 - 1px);
        transform: rotate(270deg) translateX(var(--arrowOffsetY));
      }
    }
  }

  .tour-hint-overlay {
    background-color: luxcommon.$lux-overlay-backdrop-color;
    position: fixed;
    z-index: 1001;

    //Highlight Element
    &.content {
      background: none;
      overflow: hidden;

      //Rounded corners for the highlight
      &::after {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        border: 5px solid luxcommon.$lux-overlay-backdrop-color;
        border-radius: 10px;
        transform: translate(-5px, -5px);
      }
    }

    //Top Overlay
    &.top {
      left: 0;
      width: 100%;
      top: 0;
    }

    //Bottom Overlay
    &.bottom {
      left: 0;
      width: 100%;
      bottom: 0;
    }

    //Left Overlay
    &.left {
      left: 0;
      top: 0;
      height: 100%;
    }

    //Right Overlay
    &.right {
      right: 0;
      top: 0;
      height: 100%;
    }
  }
}

lux-tour-hint-preset {
  .tour-hint-container {
    height: 100%;
    display: flex;
    flex-direction: column;

    .action-close {
      position: absolute;
      top: 8px;
      right: 8px;

      &:hover {
        cursor: pointer;
      }
    }

    .tour-hint-inner-container {
      height: 100%;

      display: grid;
      grid-template-rows: 1fr min-content;
      grid-auto-flow: row;

      .tour-hint-data {
        margin: 0 10px 0 10px;
        grid-row-start: 1;
        grid-row-end: 2;

        .tour-hint-title {
          margin-top: 0;
        }

        .tour-hint-content {
          white-space: pre-line;

          max-width: 350px;
          max-height: 250px;
          overflow-y: auto;
        }
      }

      .tour-hint-actions {
        grid-row-start: 2;
        grid-row-end: 3;

        display: grid;
        grid-template-rows: auto auto;
        grid-auto-flow: row;

        .action-dont-show-again {
          margin: 20px 10px 0 10px;
        }

        .action-navigation {
          display: grid;
          grid-template-columns: 1fr 1fr 1fr;
          grid-auto-flow: column;
          justify-items: left;

          .action-nav-previous {
            justify-self: start;
            grid-column-start: 1;
            grid-column-end: 2;
          }

          .nav-label-step {
            justify-self: center;
            align-self: center;
            grid-column-start: 2;
            grid-column-end: 3;

            margin: 0 10px 0 10px;
          }

          .action-nav-next {
            justify-self: end;
            grid-column-start: 3;
            grid-column-end: 4;
          }
        }
      }
    }
  }
}
